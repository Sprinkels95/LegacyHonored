steps:
# Step 1: Install Dependencies, Fix Permissions, and Build the App
# This single step ensures the build environment is consistent.
- name: 'reactnativecommunity/react-native-android'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      npm install --legacy-peer-deps
      cd android
      chmod +x gradlew #<-- The critical permission fix, inside the build step.
      ./gradlew assembleRelease

# Step 2: Distribute the APK to testers via Firebase App Distribution.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
    - 'firebase'
    - 'appdistribution:distribute'
    - 'android/app/build/outputs/apk/release/app-release.apk'
    - '--app=1:53700756169:android:2f4d0891542f2c286d51d8'
    - '--release-notes=This build is successful. The pipeline is now fully operational.'
    - '--groups=testers'

# Make the generated APK available as a downloadable artifact.
artifacts:
  objects:
    location: 'gs://memory-lane-app-469523-builds'
    paths: ['android/app/build/outputs/apk/release/app-release.apk']

# Set a generous timeout for the build.
timeout: 3600s
