steps:
# Build the custom builder image that has both Node.js and the Android SDK
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/android-builder', '.', '-f', 'Dockerfile.android']

# Run the build process inside the custom builder
- name: 'gcr.io/$PROJECT_ID/android-builder'
  entrypoint: 'bash'
  args:
  - '-c' 
  - |
    npm install --legacy-peer-deps
    cd android
    chmod +x gradlew
    ./gradlew assembleRelease

# Distribute the APK using Firebase App Distribution
- name: 'node:20'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      npm install -g firebase-tools
      firebase appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
        --app "1:53700756169:android:2f4d0891542f2c286d51d8" \
        --release-notes "Successful build from Google Cloud Build!" \
        --groups "testers"

# Store the APK as a build artifact
artifacts:
  objects:
    location: 'gs://memory-lane-app-469523-builds'
    paths: ['android/app/build/outputs/apk/release/app-release.apk']

# Push the custom builder image to the registry
images:
- 'gcr.io/$PROJECT_ID/android-builder'

timeout: 3600s
